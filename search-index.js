var N=null,E="",T="t",U="u",searchIndex={};
var R=["compress","status","action","result","error","decompress","total_in","Total number of bytes processed as input","total_out","Total number of bytes processed as output","compression","Acquires a reference to the underlying stream","Acquires a mutable reference to the underlying stream","into_inner","Returns the number of bytes that the decompressor has…","BzEncoder","BzDecoder","bzencoder","get_ref","get_mut","Returns the number of bytes produced by the compressor…","Returns the number of bytes consumed by the compressor…","bzdecoder","Unwrap the underlying writer, finishing the compression…","Create a new compression stream which will compress at the…","Acquires a reference to the underlying writer.","Acquires a mutable reference to the underlying writer.","try_finish","Attempt to finish this output stream, writing out final…","Returns the number of bytes consumed by the decompressor…","try_from","try_into","borrow_mut","type_id","to_owned","clone_into","borrow","typeid","bzip2::bufread","bzip2::read","bzip2::write","formatter","Compress","Decompress","Compression","bz_stream"];
searchIndex["bzip2"]={"doc":"Bzip compression for Rust","i":[[3,R[42],"bzip2","Representation of an in-memory compression stream.",N,N],[3,R[43],E,"Representation of an in-memory decompression stream.",N,N],[3,R[44],E,"When compressing data, the compression level can be…",N,N],[4,"Action",E,"Possible actions to take on compression.",N,N],[13,"Run",E,"Normal compression.",0,N],[13,"Flush",E,"Request that the current compression block is terminate.",0,N],[13,"Finish",E,"Request that the compression stream be finalized.",0,N],[4,"Status",E,"Result of compression or decompression",N,N],[13,"Ok",E,"Decompression went fine, nothing much to report.",1,N],[13,"FlushOk",E,"The Flush action on a compression went ok.",1,N],[13,"RunOk",E,"THe Run action on compression went ok.",1,N],[13,"FinishOk",E,"The Finish action on compression went ok.",1,N],[13,"StreamEnd",E,"The stream's end has been met, meaning that no more data…",1,N],[13,"MemNeeded",E,"There was insufficient memory in the input or output…",1,N],[4,"Error",E,"Fatal errors encountered when compressing/decompressing…",N,N],[13,"Sequence",E,"The sequence of operations called on a…",2,N],[13,"Data",E,"The data being decompressed was invalid, or it was not a…",2,N],[13,"DataMagic",E,"The magic bz2 header wasn't present when decompressing.",2,N],[13,"Param",E,"The parameters to this function were invalid.",2,N],[11,"new",E,"Creates a new stream prepared for compression.",3,[[[R[10]],["u32"]],[R[0]]]],[11,R[0],E,"Compress a block of input into a block of output.",3,[[["self"],[R[2]]],[[R[3],[R[1],R[4]]],[R[4]],[R[1]]]]],[11,"compress_vec",E,"Compress a block of input into an output vector.",3,[[["self"],["vec"],[R[2]]],[[R[3],[R[1],R[4]]],[R[4]],[R[1]]]]],[11,R[6],E,R[7],3,[[["self"]],["u64"]]],[11,R[8],E,R[9],3,[[["self"]],["u64"]]],[11,"new",E,"Creates a new stream prepared for decompression.",4,[[["bool"]],[R[5]]]],[11,R[5],E,"Decompress a block of input into a block of output.",4,[[["self"]],[[R[3],[R[1],R[4]]],[R[4]],[R[1]]]]],[11,"decompress_vec",E,"Decompress a block of input into an output vector.",4,[[["self"],["vec"]],[[R[3],[R[1],R[4]]],[R[4]],[R[1]]]]],[11,R[6],E,R[7],4,[[["self"]],["u64"]]],[11,R[8],E,R[9],4,[[["self"]],["u64"]]],[0,"bufread",E,"I/O streams for wrapping `BufRead` types as…",N,N],[3,R[15],R[38],"A bz2 encoder, or compressor.",N,N],[3,R[16],E,"A bz2 decoder, or decompressor.",N,N],[11,"new",E,"Creates a new encoder which will read uncompressed data…",5,[[[R[10]],["r"]],[R[17]]]],[11,R[18],E,R[11],5,[[["self"]],["r"]]],[11,R[19],E,R[12],5,[[["self"]],["r"]]],[11,R[13],E,"Consumes this encoder, returning the underlying reader.",5,[[],["r"]]],[11,R[8],E,R[20],5,[[["self"]],["u64"]]],[11,R[6],E,R[21],5,[[["self"]],["u64"]]],[11,"new",E,"Creates a new decoder which will decompress data read from…",6,[[["r"]],[R[22]]]],[11,R[18],E,R[11],6,[[["self"]],["r"]]],[11,R[19],E,R[12],6,[[["self"]],["r"]]],[11,R[13],E,"Consumes this decoder, returning the underlying reader.",6,[[],["r"]]],[11,R[6],E,R[14],6,[[["self"]],["u64"]]],[11,R[8],E,R[14],6,[[["self"]],["u64"]]],[0,"read","bzip2","Reader-based compression/decompression streams",N,N],[3,R[15],R[39],"A compression stream which wraps an uncompressed stream of…",N,N],[3,R[16],E,"A decompression stream which wraps a compressed stream of…",N,N],[11,"new",E,R[24],7,[[[R[10]],["r"]],[R[17]]]],[11,R[18],E,R[11],7,[[["self"]],["r"]]],[11,R[19],E,R[12],7,[[["self"]],["r"]]],[11,R[13],E,R[23],7,[[],["r"]]],[11,R[8],E,R[20],7,[[["self"]],["u64"]]],[11,R[6],E,R[21],7,[[["self"]],["u64"]]],[11,"new",E,"Create a new decompression stream, which will read…",8,[[["r"]],[R[22]]]],[11,R[18],E,R[11],8,[[["self"]],["r"]]],[11,R[19],E,R[12],8,[[["self"]],["r"]]],[11,R[13],E,R[23],8,[[],["r"]]],[11,R[8],E,"Returns the number of bytes produced by the decompressor…",8,[[["self"]],["u64"]]],[11,R[6],E,R[29],8,[[["self"]],["u64"]]],[0,"write","bzip2","Writer-based compression/decompression streams",N,N],[3,R[15],R[40],"A compression stream which will have uncompressed data…",N,N],[3,R[16],E,"A compression stream which will have compressed data…",N,N],[11,"new",E,R[24],9,[[["w"],[R[10]]],[R[17]]]],[11,R[18],E,R[25],9,[[["self"]],["w"]]],[11,R[19],E,R[26],9,[[["self"]],["w"]]],[11,R[27],E,R[28],9,[[["self"]],[R[3]]]],[11,"finish",E,"Consumes this encoder, flushing the output stream.",9,[[],[R[3]]]],[11,R[8],E,"Returns the number of bytes produced by the compressor",9,[[["self"]],["u64"]]],[11,R[6],E,R[21],9,[[["self"]],["u64"]]],[11,"new",E,"Create a new decoding stream which will decompress all…",10,[[["w"]],[R[22]]]],[11,R[18],E,R[25],10,[[["self"]],["w"]]],[11,R[19],E,R[26],10,[[["self"]],["w"]]],[11,R[27],E,R[28],10,[[["self"]],[R[3]]]],[11,"finish",E,R[23],10,[[["self"]],[R[3]]]],[11,R[8],E,"Returns the number of bytes produced by the decompressor",10,[[["self"]],["u64"]]],[11,R[6],E,R[29],10,[[["self"]],["u64"]]],[11,"new","bzip2","Create a new compression spec with a specific numeric…",11,[[["u32"]],[R[10]]]],[11,"none",E,"Do not compress.",11,[[],[R[10]]]],[11,"fast",E,"Optimize for the best speed of encoding.",11,[[],[R[10]]]],[11,"best",E,"Optimize for the size of data being encoded.",11,[[],[R[10]]]],[11,"level",E,"Return the compression level as an integer.",11,[[["self"]],["u32"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[30],E,E,3,[[[U]],[R[3]]]],[11,R[31],E,E,3,[[],[R[3]]]],[11,R[32],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[["self"]],[T]]],[11,R[33],E,E,3,[[["self"]],[R[37]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[30],E,E,4,[[[U]],[R[3]]]],[11,R[31],E,E,4,[[],[R[3]]]],[11,R[32],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[["self"]],[T]]],[11,R[33],E,E,4,[[["self"]],[R[37]]]],[11,R[34],E,E,11,[[["self"]],[T]]],[11,R[35],E,E,11,[[[T],["self"]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[30],E,E,11,[[[U]],[R[3]]]],[11,R[31],E,E,11,[[],[R[3]]]],[11,R[32],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[["self"]],[T]]],[11,R[33],E,E,11,[[["self"]],[R[37]]]],[11,R[34],E,E,0,[[["self"]],[T]]],[11,R[35],E,E,0,[[[T],["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[30],E,E,0,[[[U]],[R[3]]]],[11,R[31],E,E,0,[[],[R[3]]]],[11,R[32],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[["self"]],[R[37]]]],[11,R[34],E,E,1,[[["self"]],[T]]],[11,R[35],E,E,1,[[[T],["self"]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[30],E,E,1,[[[U]],[R[3]]]],[11,R[31],E,E,1,[[],[R[3]]]],[11,R[32],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[["self"]],[T]]],[11,R[33],E,E,1,[[["self"]],[R[37]]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[35],E,E,2,[[[T],["self"]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"to_string",E,E,2,[[["self"]],["string"]]],[11,R[30],E,E,2,[[[U]],[R[3]]]],[11,R[31],E,E,2,[[],[R[3]]]],[11,R[32],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[["self"]],[T]]],[11,R[33],E,E,2,[[["self"]],[R[37]]]],[11,"into",R[38],E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[30],E,E,5,[[[U]],[R[3]]]],[11,R[31],E,E,5,[[],[R[3]]]],[11,R[32],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[["self"]],[T]]],[11,R[33],E,E,5,[[["self"]],[R[37]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[30],E,E,6,[[[U]],[R[3]]]],[11,R[31],E,E,6,[[],[R[3]]]],[11,R[32],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[["self"]],[T]]],[11,R[33],E,E,6,[[["self"]],[R[37]]]],[11,"into",R[39],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[30],E,E,7,[[[U]],[R[3]]]],[11,R[31],E,E,7,[[],[R[3]]]],[11,R[32],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[["self"]],[T]]],[11,R[33],E,E,7,[[["self"]],[R[37]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[30],E,E,8,[[[U]],[R[3]]]],[11,R[31],E,E,8,[[],[R[3]]]],[11,R[32],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[["self"]],[T]]],[11,R[33],E,E,8,[[["self"]],[R[37]]]],[11,"into",R[40],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[30],E,E,9,[[[U]],[R[3]]]],[11,R[31],E,E,9,[[],[R[3]]]],[11,R[32],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[["self"]],[T]]],[11,R[33],E,E,9,[[["self"]],[R[37]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[30],E,E,10,[[[U]],[R[3]]]],[11,R[31],E,E,10,[[],[R[3]]]],[11,R[32],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[["self"]],[T]]],[11,R[33],E,E,10,[[["self"]],[R[37]]]],[11,"drop",E,E,9,[[["self"]]]],[11,"drop",E,E,10,[[["self"]]]],[11,"default","bzip2","Choose the default compression, a balance between speed…",11,[[],[R[10]]]],[11,"clone",E,E,0,[[["self"]],[R[2]]]],[11,"clone",E,E,1,[[["self"]],[R[1]]]],[11,"clone",E,E,2,[[["self"]],[R[4]]]],[11,"clone",E,E,11,[[["self"]],[R[10]]]],[11,"eq",E,E,0,[[["self"],[R[2]]],["bool"]]],[11,"eq",E,E,1,[[[R[1]],["self"]],["bool"]]],[11,"eq",E,E,2,[[[R[4]],["self"]],["bool"]]],[11,"fmt",E,E,2,[[[R[41]],["self"]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[41]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[41]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[41]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[41]]],[R[3]]]],[11,"write",R[38],E,5,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"flush",E,E,5,[[["self"]],[R[3]]]],[11,"write",E,E,6,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"flush",E,E,6,[[["self"]],[R[3]]]],[11,"write",R[39],E,7,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"flush",E,E,7,[[["self"]],[R[3]]]],[11,"write",E,E,8,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"flush",E,E,8,[[["self"]],[R[3]]]],[11,"write",R[40],E,9,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"flush",E,E,9,[[["self"]],[R[3]]]],[11,"write",E,E,10,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"flush",E,E,10,[[["self"]],[R[3]]]],[11,"read",R[38],E,5,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"read",E,E,6,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"read",R[39],E,7,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"read",E,E,8,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"read",R[40],E,9,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"read",E,E,10,[[["self"]],[["usize"],[R[3],["usize"]]]]],[11,"description","bzip2",E,2,[[["self"]],["str"]]]],"p":[[4,"Action"],[4,"Status"],[4,"Error"],[3,R[42]],[3,R[43]],[3,R[15]],[3,R[16]],[3,R[15]],[3,R[16]],[3,R[15]],[3,R[16]],[3,R[44]]]};
searchIndex["bzip2_sys"]={"doc":E,"i":[[3,R[45],"bzip2_sys",E,N,N],[12,"next_in",E,E,0,N],[12,"avail_in",E,E,0,N],[12,"total_in_lo32",E,E,0,N],[12,"total_in_hi32",E,E,0,N],[12,"next_out",E,E,0,N],[12,"avail_out",E,E,0,N],[12,"total_out_lo32",E,E,0,N],[12,"total_out_hi32",E,E,0,N],[12,"state",E,E,0,N],[12,"bzalloc",E,E,0,N],[12,"bzfree",E,E,0,N],[12,"opaque",E,E,0,N],[5,"bz_internal_error",E,E,N,[[["c_int"]]]],[5,"BZ2_bzCompressInit",E,E,N,N],[5,"BZ2_bzCompress",E,E,N,N],[5,"BZ2_bzCompressEnd",E,E,N,N],[5,"BZ2_bzDecompressInit",E,E,N,N],[5,"BZ2_bzDecompress",E,E,N,N],[5,"BZ2_bzDecompressEnd",E,E,N,N],[17,"BZ_RUN",E,E,N,N],[17,"BZ_FLUSH",E,E,N,N],[17,"BZ_FINISH",E,E,N,N],[17,"BZ_OK",E,E,N,N],[17,"BZ_RUN_OK",E,E,N,N],[17,"BZ_FLUSH_OK",E,E,N,N],[17,"BZ_FINISH_OK",E,E,N,N],[17,"BZ_STREAM_END",E,E,N,N],[17,"BZ_SEQUENCE_ERROR",E,E,N,N],[17,"BZ_PARAM_ERROR",E,E,N,N],[17,"BZ_MEM_ERROR",E,E,N,N],[17,"BZ_DATA_ERROR",E,E,N,N],[17,"BZ_DATA_ERROR_MAGIC",E,E,N,N],[17,"BZ_IO_ERROR",E,E,N,N],[17,"BZ_UNEXPECTED_EOF",E,E,N,N],[17,"BZ_OUTBUFF_FULL",E,E,N,N],[17,"BZ_CONFIG_ERROR",E,E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[30],E,E,0,[[[U]],[R[3]]]],[11,R[31],E,E,0,[[],[R[3]]]],[11,R[32],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[["self"]],[R[37]]]]],"p":[[3,R[45]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);